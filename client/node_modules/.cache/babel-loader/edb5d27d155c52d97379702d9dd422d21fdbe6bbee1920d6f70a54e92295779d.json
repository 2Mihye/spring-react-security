{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\spring-react\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(\"\");\n  useEffect(() => {\n    axios\n    // API 주소값을 가져옴.\n    .get(\"http://localhost:8080/connection/hello\", {\n      withCredentials: true\n    })\n    // response와 res는 같은 의미이며, 안에 변수값은 정해진 변수값은 없지만 되도록이면 res response를 사용하면 더 좋음 !\n    .then(res => {\n      setData(res.data);\n    }).catch(error => {\n      console.log(\"데이터없음\", error);\n    });\n    // 처음에만 가져올 것이기 때문에 [] 공백을 넣어줌.\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"API \\uD638\\uCD9C \\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SdShWBeHkV26fLNog65mn1O2hHw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","data","setData","get","withCredentials","then","res","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user1/spring-react/client/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [data, setData] = useState(\"\");\n  useEffect(() => {\n    axios\n      // API 주소값을 가져옴.\n      .get(\"http://localhost:8080/connection/hello\", { withCredentials: true })\n      // response와 res는 같은 의미이며, 안에 변수값은 정해진 변수값은 없지만 되도록이면 res response를 사용하면 더 좋음 !\n      .then((res) => {\n        setData(res.data);\n      })\n      .catch((error) => {\n        console.log(\"데이터없음\", error);\n      });\n    // 처음에만 가져올 것이기 때문에 [] 공백을 넣어줌.\n  }, []);\n\n  return (\n    <div>\n      <h1>API 호출 확인</h1>\n      <p>{data}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpCC,SAAS,CAAC,MAAM;IACdC;IACE;IAAA,CACCO,GAAG,CAAC,wCAAwC,EAAE;MAAEC,eAAe,EAAE;IAAK,CAAC;IACxE;IAAA,CACCC,IAAI,CAAEC,GAAG,IAAK;MACbJ,OAAO,CAACI,GAAG,CAACL,IAAI,CAAC;IACnB,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;IAC7B,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBjB,OAAA;MAAAa,QAAA,EAAIV;IAAI;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAACf,EAAA,CAtBQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}