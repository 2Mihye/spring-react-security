{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\spring-react\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(\"\");\n\n  // fetchData라는 이름을 정의하여 try-catch 문을 사용해 비동기작업 중 발생하는 에러를 잡아내고 콘솔에 메세지를 출력하는 것\n  // 간접적으로 호출\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8080/api/java\", {\n          withCredentials: true\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  /*\n  직접적으로 한 번에 axios를 호출하는지 차이가 있을 뿐 위 코드와 아래 코드는 같은 것임.\n  \n  useEffect 안에서 직접 비동기 작업을 수행하고 간단하게 catch문을 사용하여 에러를 처리하고 콘솔에 에러 메세지를 출력\n   useEffect(() => {\n    axios\n      // API 주소값을 가져옴.\n      .get(\"http://localhost:8080/api/expression\", { withCredentials: true })\n      // response와 res는 같은 의미이며, 안에 변수값은 정해진 변수값은 없지만 되도록이면 res response를 사용하면 더 좋음 !\n      .then((res) => {\n        setData(res.data);\n      })\n      .catch((error) => {\n        console.log(\"데이터없음\", error);\n      });\n    // 처음에만 가져올 것이기 때문에 [] 공백을 넣어줌.\n  }, []);\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"API \\uD638\\uCD9C \\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SdShWBeHkV26fLNog65mn1O2hHw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","data","setData","fetchData","res","get","withCredentials","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user1/spring-react/client/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [data, setData] = useState(\"\");\n\n  // fetchData라는 이름을 정의하여 try-catch 문을 사용해 비동기작업 중 발생하는 에러를 잡아내고 콘솔에 메세지를 출력하는 것\n  // 간접적으로 호출\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8080/api/java\", {\n          withCredentials: true,\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  /*\n  직접적으로 한 번에 axios를 호출하는지 차이가 있을 뿐 위 코드와 아래 코드는 같은 것임.\n\n\n\n  useEffect 안에서 직접 비동기 작업을 수행하고 간단하게 catch문을 사용하여 에러를 처리하고 콘솔에 에러 메세지를 출력\n\n  useEffect(() => {\n    axios\n      // API 주소값을 가져옴.\n      .get(\"http://localhost:8080/api/expression\", { withCredentials: true })\n      // response와 res는 같은 의미이며, 안에 변수값은 정해진 변수값은 없지만 되도록이면 res response를 사용하면 더 좋음 !\n      .then((res) => {\n        setData(res.data);\n      })\n      .catch((error) => {\n        console.log(\"데이터없음\", error);\n      });\n    // 처음에만 가져올 것이기 때문에 [] 공백을 넣어줌.\n  }, []);\n  */\n  return (\n    <div>\n      <h1>API 호출 확인</h1>\n      <p>{data}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA;EACAC,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,gCAAgC,EAAE;UAC5DC,eAAe,EAAE;QACnB,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IACDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAIE,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBhB,OAAA;MAAAY,QAAA,EAAIT;IAAI;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAACd,EAAA,CA7CQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}